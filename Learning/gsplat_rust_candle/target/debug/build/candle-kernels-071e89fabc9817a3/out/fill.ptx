//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-33567101
// Cuda compilation tools, release 12.3, V12.3.107
// Based on NVVM 7.0.1
//

.version 8.3
.target sm_75
.address_size 64

	// .globl	fill_u8

.visible .entry fill_u8(
	.param .u64 fill_u8_param_0,
	.param .u8 fill_u8_param_1,
	.param .u64 fill_u8_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<9>;


	ld.param.u8 	%rs1, [fill_u8_param_1];
	ld.param.u64 	%rd5, [fill_u8_param_0];
	ld.param.u64 	%rd6, [fill_u8_param_2];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r9, %r6, %r1, %r7;
	cvt.u64.u32 	%rd8, %r9;
	setp.ge.u64 	%p1, %rd8, %rd6;
	@%p1 bra 	$L__BB0_3;

	mov.u32 	%r8, %nctaid.x;
	mul.lo.s32 	%r3, %r1, %r8;
	cvta.to.global.u64 	%rd2, %rd5;

$L__BB0_2:
	add.s64 	%rd7, %rd2, %rd8;
	st.global.u8 	[%rd7], %rs1;
	add.s32 	%r9, %r9, %r3;
	cvt.u64.u32 	%rd8, %r9;
	setp.lt.u64 	%p2, %rd8, %rd6;
	@%p2 bra 	$L__BB0_2;

$L__BB0_3:
	ret;

}
	// .globl	fill_u32
.visible .entry fill_u32(
	.param .u64 fill_u32_param_0,
	.param .u32 fill_u32_param_1,
	.param .u64 fill_u32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd5, [fill_u32_param_0];
	ld.param.u32 	%r6, [fill_u32_param_1];
	ld.param.u64 	%rd6, [fill_u32_param_2];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r10, %r7, %r1, %r8;
	cvt.u64.u32 	%rd9, %r10;
	setp.ge.u64 	%p1, %rd9, %rd6;
	@%p1 bra 	$L__BB1_3;

	mov.u32 	%r9, %nctaid.x;
	mul.lo.s32 	%r3, %r1, %r9;
	cvta.to.global.u64 	%rd2, %rd5;

$L__BB1_2:
	shl.b64 	%rd7, %rd9, 2;
	add.s64 	%rd8, %rd2, %rd7;
	st.global.u32 	[%rd8], %r6;
	add.s32 	%r10, %r10, %r3;
	cvt.u64.u32 	%rd9, %r10;
	setp.lt.u64 	%p2, %rd9, %rd6;
	@%p2 bra 	$L__BB1_2;

$L__BB1_3:
	ret;

}
	// .globl	fill_i64
.visible .entry fill_i64(
	.param .u64 fill_i64_param_0,
	.param .u64 fill_i64_param_1,
	.param .u64 fill_i64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd5, [fill_i64_param_0];
	ld.param.u64 	%rd6, [fill_i64_param_1];
	ld.param.u64 	%rd7, [fill_i64_param_2];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r9, %r6, %r1, %r7;
	cvt.u64.u32 	%rd10, %r9;
	setp.ge.u64 	%p1, %rd10, %rd7;
	@%p1 bra 	$L__BB2_3;

	mov.u32 	%r8, %nctaid.x;
	mul.lo.s32 	%r3, %r1, %r8;
	cvta.to.global.u64 	%rd2, %rd5;

$L__BB2_2:
	shl.b64 	%rd8, %rd10, 3;
	add.s64 	%rd9, %rd2, %rd8;
	st.global.u64 	[%rd9], %rd6;
	add.s32 	%r9, %r9, %r3;
	cvt.u64.u32 	%rd10, %r9;
	setp.lt.u64 	%p2, %rd10, %rd7;
	@%p2 bra 	$L__BB2_2;

$L__BB2_3:
	ret;

}
	// .globl	fill_f16
.visible .entry fill_f16(
	.param .u64 fill_f16_param_0,
	.param .align 2 .b8 fill_f16_param_1[2],
	.param .u64 fill_f16_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<10>;


	ld.param.u16 	%rs2, [fill_f16_param_1];
	ld.param.u64 	%rd5, [fill_f16_param_0];
	ld.param.u64 	%rd6, [fill_f16_param_2];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r9, %r6, %r1, %r7;
	cvt.u64.u32 	%rd9, %r9;
	setp.ge.u64 	%p1, %rd9, %rd6;
	@%p1 bra 	$L__BB3_3;

	mov.u32 	%r8, %nctaid.x;
	mul.lo.s32 	%r3, %r1, %r8;
	cvta.to.global.u64 	%rd2, %rd5;

$L__BB3_2:
	shl.b64 	%rd7, %rd9, 1;
	add.s64 	%rd8, %rd2, %rd7;
	st.global.u16 	[%rd8], %rs2;
	add.s32 	%r9, %r9, %r3;
	cvt.u64.u32 	%rd9, %r9;
	setp.lt.u64 	%p2, %rd9, %rd6;
	@%p2 bra 	$L__BB3_2;

$L__BB3_3:
	ret;

}
	// .globl	fill_f32
.visible .entry fill_f32(
	.param .u64 fill_f32_param_0,
	.param .f32 fill_f32_param_1,
	.param .u64 fill_f32_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd5, [fill_f32_param_0];
	ld.param.f32 	%f1, [fill_f32_param_1];
	ld.param.u64 	%rd6, [fill_f32_param_2];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r9, %r6, %r1, %r7;
	cvt.u64.u32 	%rd9, %r9;
	setp.ge.u64 	%p1, %rd9, %rd6;
	@%p1 bra 	$L__BB4_3;

	mov.u32 	%r8, %nctaid.x;
	mul.lo.s32 	%r3, %r1, %r8;
	cvta.to.global.u64 	%rd2, %rd5;

$L__BB4_2:
	shl.b64 	%rd7, %rd9, 2;
	add.s64 	%rd8, %rd2, %rd7;
	st.global.f32 	[%rd8], %f1;
	add.s32 	%r9, %r9, %r3;
	cvt.u64.u32 	%rd9, %r9;
	setp.lt.u64 	%p2, %rd9, %rd6;
	@%p2 bra 	$L__BB4_2;

$L__BB4_3:
	ret;

}
	// .globl	fill_f64
.visible .entry fill_f64(
	.param .u64 fill_f64_param_0,
	.param .f64 fill_f64_param_1,
	.param .u64 fill_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<10>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd5, [fill_f64_param_0];
	ld.param.f64 	%fd1, [fill_f64_param_1];
	ld.param.u64 	%rd6, [fill_f64_param_2];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r9, %r6, %r1, %r7;
	cvt.u64.u32 	%rd9, %r9;
	setp.ge.u64 	%p1, %rd9, %rd6;
	@%p1 bra 	$L__BB5_3;

	mov.u32 	%r8, %nctaid.x;
	mul.lo.s32 	%r3, %r1, %r8;
	cvta.to.global.u64 	%rd2, %rd5;

$L__BB5_2:
	shl.b64 	%rd7, %rd9, 3;
	add.s64 	%rd8, %rd2, %rd7;
	st.global.f64 	[%rd8], %fd1;
	add.s32 	%r9, %r9, %r3;
	cvt.u64.u32 	%rd9, %r9;
	setp.lt.u64 	%p2, %rd9, %rd6;
	@%p2 bra 	$L__BB5_2;

$L__BB5_3:
	ret;

}

